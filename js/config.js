// Enhanced CONFIG for Energy as Fuel System - V2.0 FUEL UPDATE\nconst CONFIG = {\n    // Game settings\n    GAME: {\n        CANVAS_WIDTH: 800,\n        CANVAS_HEIGHT: 600,\n        TARGET_FPS: 60,\n        UPDATE_INTERVAL: 16,\n    },\n\n    // Planet settings - ENERGY FUEL SYSTEM\n    PLANETS: {\n        COUNT: 8,\n        MIN_CAPACITY: 20,\n        MAX_CAPACITY: 60,\n        MIN_DISTANCE: 120,\n        PRODUCTION_BASE: 0.5,      // FREE ship regeneration\n        PRODUCTION_MULTIPLIER: 0.2,\n        CONQUEST_TIME: 2000,\n        \n        // ENERGY FUEL: Better starting resources\n        INITIAL_RESOURCES: {\n            metal: { min: 50, max: 100 },   // Less starting metal (construction only)\n            energy: { min: 60, max: 120 }   // More starting energy (fuel)\n        },\n        \n        // ENERGY FUEL: Resource generation rebalanced\n        BASE_METAL_PRODUCTION: 0.3,  // 18 metal/min per planet (construction only)\n        BASE_ENERGY_PRODUCTION: 0.15, // 9 energy/min per planet (fuel)\n        MAX_RESOURCE_STORAGE: 300,   // Higher energy storage needed\n        \n        // Larger planet capacities for more strategic play\n        CAPACITIES: [20, 25, 30, 40, 50, 60, 70],\n        \n        // FREE ship regeneration (unchanged)\n        SHIP_PRODUCTION_RATE: 0.5,   // 1 ship every 2 seconds (FREE)\n    },\n\n    // Fleet settings\n    FLEET: {\n        SPEED: 80,\n        MIN_SEND: 1,\n    },\n\n    // AI settings\n    AI: {\n        DECISION_INTERVAL: 3000,  // Slightly slower for energy management\n        AGGRESSION: 0.7,          // Reduced due to energy constraints\n        MIN_ATTACK_FORCE: 2,\n    },\n\n    // Visual settings\n    VISUAL: {\n        PLANET_MIN_RADIUS: 15,\n        PLANET_MAX_RADIUS: 40,\n        SHIP_TRAIL_LENGTH: 8,\n        HOVER_GLOW: '#ffff00',\n    },\n\n    // Colors\n    COLORS: {\n        PLAYER: '#00ff88',\n        AI: '#ff4444', \n        NEUTRAL: '#888888',\n        BACKGROUND: '#0a0a1a',\n        UI_TEXT: '#ffffff',\n    },\n\n    // ENERGY FUEL SYSTEM: New ship movement costs\n    SHIP_COST: {\n        metal: 0,   // FREE to move ships (they regenerate free)\n        energy: {\n            base: 1.5,              // Base energy cost per ship\n            distanceMultiplier: 0.005, // Additional cost per pixel distance\n            // Formula: cost = (base * ships) + (distance * ships * distanceMultiplier)\n        }\n    },\n\n    // ENERGY FUEL: Updated resource system\n    RESOURCES: {\n        METAL: {\n            generationBase: 1.0,      // Reduced: only for buildings\n            shipCost: 0,              // No metal cost for movement\n            storageMultiplier: 3.0    // Less storage needed\n        },\n        ENERGY: {\n            generationBase: 1.5,      // Increased: critical for movement\n            shipCost: 1.5,            // Base energy cost per ship\n            storageMultiplier: 4.0    // More storage for energy\n        }\n    },\n\n    // Building system (Action 02) - ENERGY FUEL COMPATIBLE\n    BUILDINGS: {\n        MAX_PER_PLANET: 3,\n        CONSTRUCTION_UPDATE_INTERVAL: 100,\n        REFUND_PERCENTAGE: 0.5,\n        \n        SLOT_POSITIONS: [\n            { angle: 0, distance: 45 },\n            { angle: 120, distance: 45 },\n            { angle: 240, distance: 45 }\n        ]\n    },\n\n    // Keyboard assignments\n    KEYBOARD: {\n        AVAILABLE_KEYS: ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', 'a', 's', 'd', 'f', 'g', 'h', 'j', 'k'],\n        assignments: {},\n    },\n\n    // ENERGY FUEL SYSTEM: New utility functions\n    FUEL: {\n        // Calculate energy cost for ship movement\n        calculateMovementCost(ships, distance) {\n            const baseCost = this.SHIP_COST.energy.base * ships;\n            const distanceCost = distance * ships * this.SHIP_COST.energy.distanceMultiplier;\n            return Math.ceil(baseCost + distanceCost);\n        },\n        \n        // Check if player/AI can afford movement\n        canAffordMovement(ships, distance, availableEnergy) {\n            const cost = this.calculateMovementCost(ships, distance);\n            return availableEnergy >= cost;\n        },\n        \n        // Get movement cost info for UI\n        getMovementCostInfo(ships, distance) {\n            const cost = this.calculateMovementCost(ships, distance);\n            const baseCost = this.SHIP_COST.energy.base * ships;\n            const distanceCost = cost - baseCost;\n            \n            return {\n                total: cost,\n                base: Math.ceil(baseCost),\n                distance: Math.ceil(distanceCost),\n                perShip: (cost / ships).toFixed(1)\n            };\n        }\n    }\n};\n\n// Make FUEL functions available at CONFIG level\nCONFIG.calculateMovementCost = function(ships, distance) {\n    const baseCost = this.SHIP_COST.energy.base * ships;\n    const distanceCost = distance * ships * this.SHIP_COST.energy.distanceMultiplier;\n    return Math.ceil(baseCost + distanceCost);\n};\n\nCONFIG.canAffordMovement = function(ships, distance, availableEnergy) {\n    const cost = this.calculateMovementCost(ships, distance);\n    return availableEnergy >= cost;\n};\n\nCONFIG.getMovementCostInfo = function(ships, distance) {\n    const cost = this.calculateMovementCost(ships, distance);\n    const baseCost = this.SHIP_COST.energy.base * ships;\n    const distanceCost = cost - baseCost;\n    \n    return {\n        total: cost,\n        base: Math.ceil(baseCost),\n        distance: Math.ceil(distanceCost),\n        perShip: (cost / ships).toFixed(1)\n    };\n};"